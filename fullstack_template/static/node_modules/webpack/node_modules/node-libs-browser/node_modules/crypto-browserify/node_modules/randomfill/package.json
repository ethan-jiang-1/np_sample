{
  "name": "randomfill",
  "version": "1.0.3",
  "description": "random fill from browserify stand alone",
  "main": "index.js",
  "scripts": {
    "test": "standard && node test.js | tspec",
    "phantom": "zuul --phantom -- test.js",
    "local": "zuul --local --no-coverage -- test.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:crypto-browserify/randombytes.git"
  },
  "keywords": [
    "crypto",
    "random"
  ],
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/crypto-browserify/randombytes/issues"
  },
  "homepage": "https://github.com/crypto-browserify/randombytes",
  "browser": "browser.js",
  "devDependencies": {
    "phantomjs": "^1.9.9",
    "standard": "^10.0.2",
    "tap-spec": "^2.1.2",
    "tape": "^4.6.3",
    "zuul": "^3.7.2"
  },
  "dependencies": {
    "randombytes": "^2.0.5",
    "safe-buffer": "^5.1.0"
  },
  "readme": "randomfill\n===\n\n[![Version](http://img.shields.io/npm/v/randombytes.svg)](https://www.npmjs.org/package/randombytes) [![Build Status](https://travis-ci.org/crypto-browserify/randombytes.svg?branch=master)](https://travis-ci.org/crypto-browserify/randombytes)\n\nrandomfill from node that works in the browser.  In node you just get crypto.randomBytes, but in the browser it uses .crypto/msCrypto.getRandomValues\n\n```js\nvar randomFill = require('randomfill');\nvar buf\nrandomFill.randomFillSync(16);//get 16 random bytes\nrandomFill.randomFill(16, function (err, resp) {\n  // resp is 16 random bytes\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "randomfill@1.0.3",
  "_from": "randomfill@^1.0.3"
}
